// front/src/components/Login.tsx
import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { useAuth } from '../context/AuthContext';
import { Button, Form, Input } from 'antd';
import { useQueryClient } from '@tanstack/react-query'; // üëà 1. –Ü–º–ø–æ—Ä—Ç—É—î–º–æ useQueryClient
import { getStatistics, getComputers, getUsers } from '../api/api'; // üëà 2. –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –∑–∞–ø–∏—Ç—ñ–≤

const Login: React.FC = () => {
  const { login } = useAuth();
  const navigate = useNavigate();
  const [error, setError] = useState<string | null>(null);
  const queryClient = useQueryClient(); // üëà 3. –û—Ç—Ä–∏–º—É—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä queryClient

  const onFinish = async (values: { email: string; password: string }) => {
    try {
      await login(values.email, values.password); // [cite: 1166]

      // üëá 4. –î–æ–¥–∞—î–º–æ –ª–æ–≥—ñ–∫—É –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
      console.log('Login successful. Starting prefetching...');

      // –ü–æ–ø–µ—Ä–µ–¥–Ω—î –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –≥–æ–ª–æ–≤–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏
      await queryClient.prefetchQuery({
        queryKey: ['statistics'],
        queryFn: () => getStatistics({ metrics: ['total_computers', 'os_distribution', 'low_disk_space_with_volumes', 'last_scan_time', 'status_stats'] }),
      });

      // –ü–æ–ø–µ—Ä–µ–¥–Ω—î –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–µ—Ä—à–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∫–æ–º–ø'—é—Ç–µ—Ä—ñ–≤
      await queryClient.prefetchQuery({
        queryKey: ['computers', { page: 1, limit: 1000, sort_by: 'hostname', sort_order: 'asc' }],
        queryFn: () =>
          getComputers({
            page: 1,
            limit: 1000,
            sort_by: 'hostname',
            sort_order: 'asc',
            hostname: '',
            os_name: '',
            check_status: '',
            show_disabled: false,
          }),
      });
      
      // –ü–æ–ø–µ—Ä–µ–¥–Ω—î –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –¥–ª—è –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—ñ
      await queryClient.prefetchQuery({
        queryKey: ['users'],
        queryFn: getUsers,
      });

      console.log('Prefetching complete.');
      
      navigate('/'); // [cite: 1167]
    } catch (err: any) {
      setError(err.message);
    }
  };

  return (
    <div style={{ maxWidth: 400, margin: '50px auto' }}>
      <h2>–í—Ö—ñ–¥</h2>
      <Form onFinish={onFinish} layout="vertical">
        <Form.Item
          name="email"
          rules={[{ required: true, message: '–í–≤–µ–¥—ñ—Ç—å email' }, { type: 'email', message: '–ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç email' }]}
        >
          <Input placeholder="Email" />
        </Form.Item>
        <Form.Item
          name="password"
          rules={[{ required: true, message: '–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å' }, { min: 6, message: '–ü–∞—Ä–æ–ª—å –º–∞—î –±—É—Ç–∏ –Ω–µ –º–µ–Ω—à–µ 6 —Å–∏–º–≤–æ–ª—ñ–≤' }]}
        >
          <Input.Password placeholder="–ü–∞—Ä–æ–ª—å" />
        </Form.Item>
        {error && <p style={{ color: 'red', marginBottom: 16 }}>{error}</p>}
        <Form.Item>
          <Button type="primary" htmlType="submit" block>
            –£–≤—ñ–π—Ç–∏
          </Button>
        </Form.Item>
      </Form>
    </div>
  );
};

export default Login;